--- isdn4k-utils/lib/libtools.c.orig	1999-11-03 17:13:36.000000000 +0100
+++ isdn4k-utils/lib/libtools.c	2013-01-25 22:33:39.569837494 +0100
@@ -710,7 +710,7 @@
 				          break;
 				case 'r': _mode |= R_OK;
 				          break;
-				default :
+				default : ;
 			}
 		}
 
--- isdn4k-utils/isdnlog/isdnlog/processor.c.orig	2004-01-11 11:15:51.000000000 +0100
+++ isdn4k-utils/isdnlog/isdnlog/processor.c	2013-01-25 22:42:02.836493672 +0100
@@ -4517,6 +4517,8 @@
 void procinfo(int channel, CALL * cp, int state) {}
 #endif
 
+void moreinfo(); /* soviel zu Objektorientiertem Denken ;-) */
+
 static void processctrl(int card, char *s)
 {
   register char       *ps = s, *p;
@@ -5564,7 +5566,6 @@
     tei = BROADCAST; /* Wenn nach einer tei-Zeile keine hex:-Zeile kommt, tei ungueltig machen! */
 
     if ((type == SETUP) && !replay) { /* fetch additional info from "/dev/isdninfo" */
-      static void moreinfo(); /* soviel zu Objektorientiertem Denken ;-) */
       moreinfo();
     } /* if */
 
--- isdn4k-utils/isdnlog/tools/rate.c.orig	2004-01-11 11:15:55.000000000 +0100
+++ isdn4k-utils/isdnlog/tools/rate.c	2013-01-26 08:10:13.989116438 +0100
@@ -1810,7 +1810,7 @@
 	  numbers++;
 	  number=realloc(number, numbers*sizeof(int));
 	  number[numbers-1]=i;
-	skip:
+	skip: ;
 	}
 
 	while (isblank(*s)) s++;
@@ -2381,7 +2381,7 @@
 	  }
 	}
 	return UNKNOWN;
-      done:
+      done: ;
       }
     }
   }
--- isdn4k-utils/isdnlog/tools/isdnrate.c.orig	2004-01-11 11:15:55.000000000 +0100
+++ isdn4k-utils/isdnlog/tools/isdnrate.c	2013-01-26 09:01:50.325718566 +0100
@@ -318,7 +318,7 @@
 
 static void print_header(void);
 
-static char *myname, *myshortname;
+char *myname, *myshortname;
 static char options[] = "ab:c:d:f:h:i:l:op:r:st:v::x:CD::G:HLNP:O:S:TUVX::Z";
 static char usage[] = "%s: usage: %s [ -%s ] Destination ...\n";
 
@@ -327,7 +327,7 @@
 static int usestat = 0;
 static int duration = LCR_DURATION;
 static time_t start;
-static int day, month, year, hour, min, sec;
+int day, month, year, hour, min, sec;
 static char ignore[MAXPROVIDER];
 static char *fromarea = 0;
 static char wanted_day;
--- isdn4k-utils/hisax/hisaxctrl.c.orig	2000-06-29 19:38:26.000000000 +0200
+++ isdn4k-utils/hisax/hisaxctrl.c	2013-01-26 09:46:23.125662858 +0100
@@ -37,13 +37,13 @@
 read_firmware(unsigned char *fname)
 {
 	FILE *infile;
-	int  *p, cnt;
+	int  cnt;
 	
 	if (!(infile = fopen(fname, "rb"))) {
 		fprintf(stderr, "cannot open file %s\n", fname);
 		exit(-1);
 	}
-	p = (int *) buffer = (unsigned char *) malloc(MAX_SIZE+4);
+	buffer = (unsigned char *) malloc(MAX_SIZE+4);
 	if (!buffer) {
 		fprintf(stderr, "cannot get %d byte memory\n", MAX_SIZE+4);
 		exit(-1);
@@ -54,7 +54,7 @@
 		fprintf(stderr, "wrong filesize\n");
 		exit(-1);
 	}
-	*p = cnt;
+	memcpy(buffer, &cnt, 4);
 	return(buffer);
 }
 
--- isdn4k-utils/ipppd/main.c.orig	2004-01-11 11:15:45.000000000 +0100
+++ isdn4k-utils/ipppd/main.c	2013-01-26 10:43:53.802257602 +0100
@@ -1044,10 +1044,10 @@
 static char line[256];			/* line to be logged accumulated here */
 static char *linep;
 
+static void pr_log __P((void *, char *, ...));
+
 void log_packet(u_char *p,int len,char *prefix,int linkunit)
 {
-	static void pr_log __P((void *, char *, ...));
-
     int i, n;
     u_short proto;
     u_char x;
